/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MyPackage;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Aman
 */
public class editor extends javax.swing.JFrame {

    /**
     * Creates new form editor
     */
    String type;
    int uid;
    String user_path,user_file_name="Untitled";
    public editor() {
        initComponents();
        this.setLocationRelativeTo(null);
        //this.setPath();
    }

   
    editor(String s, int i) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        this.type=s;
        this.uid=i;
        this.setPath();
        
    }

    String examplefilename, example;
    editor(int i, String s, String examplefilename, String example) {
       initComponents();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        this.uid=i;
        this.type=s;
        this.examplefilename=examplefilename;
        this.example=example;
        this.setPath();
        this.setTeacherExample(examplefilename,example);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        new_file = new javax.swing.JLabel();
        save_file = new javax.swing.JLabel();
        open_file = new javax.swing.JLabel();
        run_file = new javax.swing.JLabel();
        store_on_db = new javax.swing.JLabel();
        backup = new javax.swing.JLabel();
        lang = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        new_file.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        new_file.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        new_file.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyPackage/images/new.png"))); // NOI18N
        new_file.setText("New File");
        new_file.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        new_file.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                new_fileMouseClicked(evt);
            }
        });

        save_file.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        save_file.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        save_file.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyPackage/images/Save as1.png"))); // NOI18N
        save_file.setText("Save");
        save_file.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        save_file.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                save_fileMouseClicked(evt);
            }
        });

        open_file.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        open_file.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        open_file.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyPackage/images/open1.png"))); // NOI18N
        open_file.setText("Open");
        open_file.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        open_file.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                open_fileMouseClicked(evt);
            }
        });

        run_file.setBackground(new java.awt.Color(0, 0, 0));
        run_file.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        run_file.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        run_file.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyPackage/images/play.png"))); // NOI18N
        run_file.setText("Run");
        run_file.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        run_file.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                run_fileMouseClicked(evt);
            }
        });

        store_on_db.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        store_on_db.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyPackage/images/Database_32px.png"))); // NOI18N
        store_on_db.setText("Store On DB");
        store_on_db.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        store_on_db.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                store_on_dbMouseClicked(evt);
            }
        });

        backup.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        backup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyPackage/images/Data Backup_32px.png"))); // NOI18N
        backup.setText("Backup Stored Files");
        backup.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        backup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backupMouseClicked(evt);
            }
        });

        lang.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        lang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Java", "Python", " " }));
        lang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                langActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel1.setText("Language:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(new_file, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(save_file, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(open_file, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(run_file, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(store_on_db, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backup, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(192, 192, 192)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lang, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(118, 118, 118))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(store_on_db, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(run_file)
                    .addComponent(new_file)
                    .addComponent(save_file)
                    .addComponent(open_file))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(backup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lang, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("Untitled");
        jTextField1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 727, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setPath() {
        try
        {
            PreparedStatement pr=null;
            Connection con=DBUtil.getConnection();
            if(type.equals("s"))
                pr=con.prepareStatement("select folder_path from user where uid="+uid);
            if(type.equals("t"))
                pr=con.prepareStatement("select folder_path from teacher where tid="+uid);
            
            
            ResultSet rs=pr.executeQuery();
            while(rs.next())
            {
                user_path=rs.getString("folder_path");
            }
        }
        catch(SQLException e)
        {
            e.printStackTrace();
            System.out.print(e);
        }
    
    }
    
    private void new_fileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_new_fileMouseClicked
        // TODO add your handling code here:
        if(!jTextArea1.getText().trim().equals("") && jTextField1.getText().trim().equals("Untitled"))
        {
            int i=JOptionPane.showConfirmDialog(this, "Do you wanna save current file?");
            if(i==0)
            {
                this.saveFile();
                jTextArea1.setText("");
                jTextField1.setText("Untitled");
                user_file_name="Untitled";
            }
            if(i==1)
            {
                jTextArea1.setText("");
                jTextField1.setText("Untitled");
                user_file_name="Untitled";
            }
        }
        else
        {
            jTextArea1.setText("");
            jTextField1.setText("Untitled");
            user_file_name="Untitled";
        }
    }//GEN-LAST:event_new_fileMouseClicked

    String opath,ofile;
    private void open_fileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_open_fileMouseClicked
        // TODO add your handling code here:
      //  this.setPath();
        JFileChooser open = new JFileChooser(user_path); // open up a file chooser (a dialog for the user to browse files to open)
	int option = open.showOpenDialog(this); // get the option that the user selected (approve or cancel)
	// NOTE: because we are OPENing a file, we call showOpenDialog~
	// if the user clicked OK, we have "APPROVE_OPTION"
	// so we want to open the file
	if (option == JFileChooser.APPROVE_OPTION)
        {
		this.jTextArea1.setText(""); // clear the TextArea before applying the file contents
		try 
                {
                    
                    opath=open.getSelectedFile().getPath();
                    user_path=new File(opath).getParentFile().getAbsolutePath(); //it returns parent folder path it will help in run program from both lesson_example by teacher and direct editor
                    //JOptionPane.showMessageDialog(null, user_path);
                    Path p=Paths.get(opath);
                    user_file_name=p.getFileName().toString();
                    
                    jTextField1.setText(user_file_name);
                    // create a scanner to read the file (getSelectedFile().getPath() will get the path to the file)
                    Scanner scan = new Scanner(new FileReader(opath));
                    while (scan.hasNext()) // while there's still something to read
		    this.jTextArea1.append(scan.nextLine() + "\n"); // append the line to the TextArea
		}
                catch (Exception ex) 
                {
			System.out.println(ex.getMessage());
		}
        }
    }//GEN-LAST:event_open_fileMouseClicked

    private void save_fileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_save_fileMouseClicked
        this.saveFile();
    }//GEN-LAST:event_save_fileMouseClicked

    private void run_fileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_run_fileMouseClicked
        // TODO add your handling code here:
        Runtime rt=Runtime.getRuntime();
        Process pr;
        Path p=Paths.get(user_path+"\\"+jTextField1.getText().trim());
        
        String run_file;
        run_file=p.getFileName().toString();
        String sfile[]=run_file.split("\\.");
        String langu = lang.getSelectedItem().toString();
        if(langu.equals("Java"))
        {
            try {
                pr = rt.exec("cmd.exe /c start cmd.exe /k \"javac "+user_path+"\\"+run_file+" && java -classpath "+user_path+" "+sfile[0]+"\"  ");
            } catch (IOException ex) {
                Logger.getLogger(editor.class.getName()).log(Level.SEVERE, null, ex);
            }
                       
        }
        else if(langu.equals("Python"))
        {
            try {
               pr = rt.exec("cmd.exe /c start cmd.exe /k \"cd /d"+user_path+" && python "+sfile[0]+".py"); 
               System.out.println(user_path);
            } catch (IOException ex) {
                Logger.getLogger(editor.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        else
        {
           System.out.println("Error");
        }
        
    }//GEN-LAST:event_run_fileMouseClicked
    
    private void store_on_dbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_store_on_dbMouseClicked
        // TODO add your handling code here:
        
        if(!jTextField1.getText().trim().equals("Untitled"))
        {
            try
            {
                Connection con=DBUtil.getConnection();
                PreparedStatement pr = null;
                if(type.equals("s"))
                {
                    pr=con.prepareStatement("insert into program values(null,"+uid+",null,'"+jTextField1.getText().trim()+"','"+jTextArea1.getText().trim()+"')"); 
                }
                if(type.equals("t"))
                {
                    pr=con.prepareStatement("insert into program values(null,null,"+uid+",'"+jTextField1.getText().trim()+"','"+jTextArea1.getText().trim()+"')");
                }
                pr.execute();
                JOptionPane.showMessageDialog(this, "Program stored on database!");

            }
            catch(SQLException e)
            {
                e.printStackTrace();
                System.out.print(e);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Program is not saved");
        }
    }//GEN-LAST:event_store_on_dbMouseClicked
    String backup_path,backup_filename,backup_filecode;
    private void backupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backupMouseClicked
        // TODO add your handling code here:
        backup_path=user_path+"\\backup";
        if(!new File(backup_path).exists());
        {
            try 
            {
                Files.createDirectories(Paths.get(backup_path));
            } 
            catch (IOException ex)
            {
                ex.printStackTrace();
                System.out.print(ex);
            }
        }
        try
        {
            Connection con=DBUtil.getConnection();
            PreparedStatement pr = null;
            if(type.equals("s"))
                {
                    pr=con.prepareStatement("select file_name, code from program where user_UID="+uid); 
                }
                if(type.equals("t"))
                {
                    pr=con.prepareStatement("select file_name, code from program where teacher_TID="+uid);
                }
                ResultSet rs=pr.executeQuery();
                while(rs.next())
                {
                    backup_filename=rs.getString("file_name");
                    backup_filecode=rs.getString("code");
                    
                    BufferedWriter out = new BufferedWriter(new FileWriter(backup_path+"\\"+backup_filename));
                    out.write(backup_filecode); // write the contents of the TextArea to the file
                    out.close();
                }
                JOptionPane.showMessageDialog(this, "Program(s) are backuped to your system!");
        }
        catch(SQLException | IOException e)
        {
            e.printStackTrace();
            System.out.print(e);
        }
        
            
    }//GEN-LAST:event_backupMouseClicked

    private void langActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_langActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_langActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new editor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JComboBox<String> lang;
    private javax.swing.JLabel new_file;
    private javax.swing.JLabel open_file;
    private javax.swing.JLabel run_file;
    private javax.swing.JLabel save_file;
    private javax.swing.JLabel store_on_db;
    // End of variables declaration//GEN-END:variables

private void saveFile() 
{
    JFileChooser save = new JFileChooser(user_path); // again, open a file chooser
    int option = save.showSaveDialog(this); // similar to the open file, only this time we call
    // showSaveDialog instead of showOpenDialog
    // if the user clicked OK (and not cancel)
    String spath;
    Path p=Paths.get(save.getSelectedFile().getPath());
    if (option == JFileChooser.APPROVE_OPTION) {
        try {
            // create a buffered writer to write to a file
            BufferedWriter out = new BufferedWriter(new FileWriter(save.getSelectedFile().getPath()));
            out.write(this.jTextArea1.getText()); // write the contents of the TextArea to the file
            out.close(); // close the file stream
            user_file_name=p.getFileName().toString();
            jTextField1.setText(user_file_name);
        }
        catch (IOException ex)
        { // again, catch any exceptions and...
            // ...write to the debug console
            System.out.println(ex.getMessage());
        }
    }    
}
String teacher_example_path;

    private void setTeacherExample(String examplefilename, String example) {
 
    user_path=user_path+"\\teacher_examples";
        if(!new File(user_path).exists());
        {
            try 
            {
                Files.createDirectories(Paths.get(user_path));
            } 
            catch (IOException ex)
            {
                ex.printStackTrace();
                System.out.print(ex);
            }
        }
        
        try {
            // create a buffered writer to write to a file
            BufferedWriter out = new BufferedWriter(new FileWriter(user_path+"\\"+examplefilename));
            out.write(example); // write the contents of the TextArea to the file
            out.close(); // close the file stream
            jTextField1.setText(examplefilename);
            jTextArea1.setText(example);
        }
        catch (IOException ex)
        { // again, catch any exceptions and...
            // ...write to the debug console
            System.out.println(ex.getMessage());
        }
    }
    

}
